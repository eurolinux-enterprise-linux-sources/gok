<refentry id="gok-gok-action">
<refmeta>
<refentrytitle role="top_of_page" id="gok-gok-action.top_of_page">gok-action</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gok-action</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gok-gok-action.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="ACTION-TYPE-SWITCH--CAPS">ACTION_TYPE_SWITCH</link>
#define             <link linkend="ACTION-TYPE-MOUSEBUTTON--CAPS">ACTION_TYPE_MOUSEBUTTON</link>
#define             <link linkend="ACTION-TYPE-MOUSEPOINTER--CAPS">ACTION_TYPE_MOUSEPOINTER</link>
#define             <link linkend="ACTION-TYPE-DWELL--CAPS">ACTION_TYPE_DWELL</link>
enum                <link linkend="ActionState">ActionState</link>;
<link linkend="GokAction">GokAction</link>*          <link linkend="gok-action-new">gok_action_new</link>                      (void);
<link linkend="void">void</link>                <link linkend="gok-action-free">gok_action_free</link>                     (<link linkend="GokAction">GokAction</link> *action);
<link linkend="gboolean">gboolean</link>            <link linkend="gok-action-open">gok_action_open</link>                     (void);
<link linkend="void">void</link>                <link linkend="gok-action-close">gok_action_close</link>                    (void);
<link linkend="GokAction">GokAction</link>*          <link linkend="gok-action-get-first-action">gok_action_get_first_action</link>         (void);
<link linkend="void">void</link>                <link linkend="gok-action-set-modified">gok_action_set_modified</link>             (<link linkend="gboolean">gboolean</link> bTrueFalse);
<link linkend="void">void</link>                <link linkend="gok-action-delete-action">gok_action_delete_action</link>            (<link linkend="GokAction">GokAction</link> *pActionDelete);
<link linkend="GokAction">GokAction</link>*          <link linkend="gok-action-find-action">gok_action_find_action</link>              (<link linkend="gchar">gchar</link> *NameAction,
                                                         <link linkend="gboolean">gboolean</link> bDisplayName);
<link linkend="void">void</link>                <link linkend="gok-action-add-action">gok_action_add_action</link>               (<link linkend="GokAction">GokAction</link> *pActionNew);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gok-gok-action.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="gok-gok-action.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="ACTION-TYPE-SWITCH--CAPS" role="macro">
<title>ACTION_TYPE_SWITCH</title>
<indexterm zone="ACTION-TYPE-SWITCH--CAPS"><primary sortas="ACTION_TYPE_SWITCH">ACTION_TYPE_SWITCH</primary></indexterm><programlisting>#define ACTION_TYPE_SWITCH 1
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ACTION-TYPE-MOUSEBUTTON--CAPS" role="macro">
<title>ACTION_TYPE_MOUSEBUTTON</title>
<indexterm zone="ACTION-TYPE-MOUSEBUTTON--CAPS"><primary sortas="ACTION_TYPE_MOUSEBUTTON">ACTION_TYPE_MOUSEBUTTON</primary></indexterm><programlisting>#define ACTION_TYPE_MOUSEBUTTON 2
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ACTION-TYPE-MOUSEPOINTER--CAPS" role="macro">
<title>ACTION_TYPE_MOUSEPOINTER</title>
<indexterm zone="ACTION-TYPE-MOUSEPOINTER--CAPS"><primary sortas="ACTION_TYPE_MOUSEPOINTER">ACTION_TYPE_MOUSEPOINTER</primary></indexterm><programlisting>#define ACTION_TYPE_MOUSEPOINTER 4
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ACTION-TYPE-DWELL--CAPS" role="macro">
<title>ACTION_TYPE_DWELL</title>
<indexterm zone="ACTION-TYPE-DWELL--CAPS"><primary sortas="ACTION_TYPE_DWELL">ACTION_TYPE_DWELL</primary></indexterm><programlisting>#define ACTION_TYPE_DWELL 8
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ActionState" role="enum">
<title>enum ActionState</title>
<indexterm zone="ActionState"><primary sortas="ActionState">ActionState</primary></indexterm><programlisting>typedef enum {
ACTION_STATE_UNDEFINED,
ACTION_STATE_PRESS,
ACTION_STATE_RELEASE,
ACTION_STATE_CLICK,
ACTION_STATE_DOUBLECLICK,
ACTION_STATE_ENTER,
ACTION_STATE_LEAVE
} ActionState;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gok-action-new" role="function">
<title>gok_action_new ()</title>
<indexterm zone="gok-action-new"><primary sortas="gok_action_new">gok_action_new</primary></indexterm><programlisting><link linkend="GokAction">GokAction</link>*          gok_action_new                      (void);</programlisting>
<para>
Allocates memory for a new GokAction and initializes its attributes
to default values. Please free the returned GokAction using
gok_action_free.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new GokAction
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-action-free" role="function">
<title>gok_action_free ()</title>
<indexterm zone="gok-action-free"><primary sortas="gok_action_free">gok_action_free</primary></indexterm><programlisting><link linkend="void">void</link>                gok_action_free                     (<link linkend="GokAction">GokAction</link> *action);</programlisting>
<para>
Frees a GokAction and associated resources.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>action</parameter>&#160;:</term>
<listitem><simpara> a GokAction
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-action-open" role="function">
<title>gok_action_open ()</title>
<indexterm zone="gok-action-open"><primary sortas="gok_action_open">gok_action_open</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gok_action_open                     (void);</programlisting>
<para>
Initializes the gok actions and reads them from GConf.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the actions were initialized without problem,
         FALSE if problems occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-action-close" role="function">
<title>gok_action_close ()</title>
<indexterm zone="gok-action-close"><primary sortas="gok_action_close">gok_action_close</primary></indexterm><programlisting><link linkend="void">void</link>                gok_action_close                    (void);</programlisting>
<para>
Closes the gok actions and saves them in GConf.</para>
<para>
</para></refsect2>
<refsect2 id="gok-action-get-first-action" role="function">
<title>gok_action_get_first_action ()</title>
<indexterm zone="gok-action-get-first-action"><primary sortas="gok_action_get_first_action">gok_action_get_first_action</primary></indexterm><programlisting><link linkend="GokAction">GokAction</link>*          gok_action_get_first_action         (void);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A pointer to the first action in the list of actions.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-action-set-modified" role="function">
<title>gok_action_set_modified ()</title>
<indexterm zone="gok-action-set-modified"><primary sortas="gok_action_set_modified">gok_action_set_modified</primary></indexterm><programlisting><link linkend="void">void</link>                gok_action_set_modified             (<link linkend="gboolean">gboolean</link> bTrueFalse);</programlisting>
<para>
Sets the 'modified' flag for the gok actions. If the flag is TRUE then
the actions are written to a file when the program ends.
This should be called any time an action is added or modified.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>bTrueFalse</parameter>&#160;:</term>
<listitem><simpara> New state of the 'modified' flag for the gok actions.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-action-delete-action" role="function">
<title>gok_action_delete_action ()</title>
<indexterm zone="gok-action-delete-action"><primary sortas="gok_action_delete_action">gok_action_delete_action</primary></indexterm><programlisting><link linkend="void">void</link>                gok_action_delete_action            (<link linkend="GokAction">GokAction</link> *pActionDelete);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pActionDelete</parameter>&#160;:</term>
<listitem><simpara> Pointer to the action that will be deleted.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-action-find-action" role="function">
<title>gok_action_find_action ()</title>
<indexterm zone="gok-action-find-action"><primary sortas="gok_action_find_action">gok_action_find_action</primary></indexterm><programlisting><link linkend="GokAction">GokAction</link>*          gok_action_find_action              (<link linkend="gchar">gchar</link> *NameAction,
                                                         <link linkend="gboolean">gboolean</link> bDisplayName);</programlisting>
<para>
Finds the action from within our list of actions.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>NameAction</parameter>&#160;:</term>
<listitem><simpara> Name of the action you're trying to find.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bDisplayName</parameter>&#160;:</term>
<listitem><simpara> This should be set TRUE if you are passing in the display
name of the action. It should be set FALSE if passing in the actual
name of the action.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A pointer to the action, NULL if not found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-action-add-action" role="function">
<title>gok_action_add_action ()</title>
<indexterm zone="gok-action-add-action"><primary sortas="gok_action_add_action">gok_action_add_action</primary></indexterm><programlisting><link linkend="void">void</link>                gok_action_add_action               (<link linkend="GokAction">GokAction</link> *pActionNew);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pActionNew</parameter>&#160;:</term>
<listitem><simpara> Pointer to an action that gets added to our list of actions.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
