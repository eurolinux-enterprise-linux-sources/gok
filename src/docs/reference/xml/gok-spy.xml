<refentry id="gok-gok-spy">
<refmeta>
<refentrytitle role="top_of_page" id="gok-gok-spy.top_of_page">gok-spy</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gok-spy</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gok-gok-spy.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="void">void</link>                <link linkend="gok-spy-open">gok_spy_open</link>                        (void);
<link linkend="void">void</link>                <link linkend="gok-spy-close">gok_spy_close</link>                       (void);
<link linkend="void">void</link>                <link linkend="gok-spy-register-appchangelistener">gok_spy_register_appchangelistener</link>  (<link linkend="AccessibleChangeListener">AccessibleChangeListener</link> *callback);
<link linkend="void">void</link>                <link linkend="gok-spy-deregister-appchangelistener">gok_spy_deregister_appchangelistener</link>
                                                        (<link linkend="AccessibleChangeListener">AccessibleChangeListener</link> *callback);
<link linkend="void">void</link>                <link linkend="gok-spy-register-windowchangelistener">gok_spy_register_windowchangelistener</link>
                                                        (<link linkend="AccessibleChangeListener">AccessibleChangeListener</link> *callback);
<link linkend="void">void</link>                <link linkend="gok-spy-deregister-windowchangelistener">gok_spy_deregister_windowchangelistener</link>
                                                        (<link linkend="AccessibleChangeListener">AccessibleChangeListener</link> *callback);
<link linkend="void">void</link>                <link linkend="gok-spy-register-mousebuttonlistener">gok_spy_register_mousebuttonlistener</link>
                                                        (<link linkend="MouseButtonListener">MouseButtonListener</link> *callback);
<link linkend="void">void</link>                <link linkend="gok-spy-deregister-mousebuttonlistener">gok_spy_deregister_mousebuttonlistener</link>
                                                        (<link linkend="MouseButtonListener">MouseButtonListener</link> *callback);
<link linkend="GSList">GSList</link>*             <link linkend="gok-spy-get-list">gok_spy_get_list</link>                    (<link linkend="Accessible">Accessible</link> *paccessible);
<link linkend="AccessibleNode">AccessibleNode</link>*     <link linkend="gok-spy-refresh">gok_spy_refresh</link>                     (<link linkend="AccessibleNode">AccessibleNode</link> *plist);
<link linkend="void">void</link>                <link linkend="gok-spy-free">gok_spy_free</link>                        (<link linkend="GSList">GSList</link> *nodes);
<link linkend="gboolean">gboolean</link>            <link linkend="gok-spy-has-child">gok_spy_has_child</link>                   (<link linkend="Accessible">Accessible</link> *accessible,
                                                         <link linkend="GokSpySearchType">GokSpySearchType</link> type,
                                                         <link linkend="AccessibleRole">AccessibleRole</link> role);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gok-gok-spy.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="gok-gok-spy.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="gok-spy-open" role="function">
<title>gok_spy_open ()</title>
<indexterm zone="gok-spy-open"><primary sortas="gok_spy_open">gok_spy_open</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_open                        (void);</programlisting>
<para>
Intializes gok spy.
Note: user must initialize the SPI prior to this call; call this only once.</para>
<para>
</para></refsect2>
<refsect2 id="gok-spy-close" role="function">
<title>gok_spy_close ()</title>
<indexterm zone="gok-spy-close"><primary sortas="gok_spy_close">gok_spy_close</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_close                       (void);</programlisting>
<para>
Frees any allocated memory.</para>
<para>
</para></refsect2>
<refsect2 id="gok-spy-register-appchangelistener" role="function">
<title>gok_spy_register_appchangelistener ()</title>
<indexterm zone="gok-spy-register-appchangelistener"><primary sortas="gok_spy_register_appchangelistener">gok_spy_register_appchangelistener</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_register_appchangelistener  (<link linkend="AccessibleChangeListener">AccessibleChangeListener</link> *callback);</programlisting>
<para>
<parameter>callback</parameter>: the listener to register</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-deregister-appchangelistener" role="function">
<title>gok_spy_deregister_appchangelistener ()</title>
<indexterm zone="gok-spy-deregister-appchangelistener"><primary sortas="gok_spy_deregister_appchangelistener">gok_spy_deregister_appchangelistener</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_deregister_appchangelistener
                                                        (<link linkend="AccessibleChangeListener">AccessibleChangeListener</link> *callback);</programlisting>
<para>
<parameter>callback</parameter>: the listener to deregister</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-register-windowchangelistener" role="function">
<title>gok_spy_register_windowchangelistener ()</title>
<indexterm zone="gok-spy-register-windowchangelistener"><primary sortas="gok_spy_register_windowchangelistener">gok_spy_register_windowchangelistener</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_register_windowchangelistener
                                                        (<link linkend="AccessibleChangeListener">AccessibleChangeListener</link> *callback);</programlisting>
<para>
<parameter>callback</parameter>: the listener to register</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-deregister-windowchangelistener" role="function">
<title>gok_spy_deregister_windowchangelistener ()</title>
<indexterm zone="gok-spy-deregister-windowchangelistener"><primary sortas="gok_spy_deregister_windowchangelistener">gok_spy_deregister_windowchangelistener</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_deregister_windowchangelistener
                                                        (<link linkend="AccessibleChangeListener">AccessibleChangeListener</link> *callback);</programlisting>
<para>
<parameter>callback</parameter>: the listener to deregister</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-register-mousebuttonlistener" role="function">
<title>gok_spy_register_mousebuttonlistener ()</title>
<indexterm zone="gok-spy-register-mousebuttonlistener"><primary sortas="gok_spy_register_mousebuttonlistener">gok_spy_register_mousebuttonlistener</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_register_mousebuttonlistener
                                                        (<link linkend="MouseButtonListener">MouseButtonListener</link> *callback);</programlisting>
<para>
<parameter>callback</parameter>: the listener to register</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-deregister-mousebuttonlistener" role="function">
<title>gok_spy_deregister_mousebuttonlistener ()</title>
<indexterm zone="gok-spy-deregister-mousebuttonlistener"><primary sortas="gok_spy_deregister_mousebuttonlistener">gok_spy_deregister_mousebuttonlistener</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_deregister_mousebuttonlistener
                                                        (<link linkend="MouseButtonListener">MouseButtonListener</link> *callback);</programlisting>
<para>
<parameter>callback</parameter>: the listener to deregister</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-get-list" role="function">
<title>gok_spy_get_list ()</title>
<indexterm zone="gok-spy-get-list"><primary sortas="gok_spy_get_list">gok_spy_get_list</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*             gok_spy_get_list                    (<link linkend="Accessible">Accessible</link> *paccessible);</programlisting>
<para>
<parameter>paccessible</parameter>: The parent accessible to the list
</para>
<para>
User must call gok_spy_free when finished with this list.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>paccessible</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to the list or NULL
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-refresh" role="function">
<title>gok_spy_refresh ()</title>
<indexterm zone="gok-spy-refresh"><primary sortas="gok_spy_refresh">gok_spy_refresh</primary></indexterm><programlisting><link linkend="AccessibleNode">AccessibleNode</link>*     gok_spy_refresh                     (<link linkend="AccessibleNode">AccessibleNode</link> *plist);</programlisting>
<para>
<parameter>plist</parameter>: Pointer to the list to refresh
</para>
<para>
not implemented.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>plist</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to the refreshed list
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-free" role="function">
<title>gok_spy_free ()</title>
<indexterm zone="gok-spy-free"><primary sortas="gok_spy_free">gok_spy_free</primary></indexterm><programlisting><link linkend="void">void</link>                gok_spy_free                        (<link linkend="GSList">GSList</link> *nodes);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>nodes</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-spy-has-child" role="function">
<title>gok_spy_has_child ()</title>
<indexterm zone="gok-spy-has-child"><primary sortas="gok_spy_has_child">gok_spy_has_child</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gok_spy_has_child                   (<link linkend="Accessible">Accessible</link> *accessible,
                                                         <link linkend="GokSpySearchType">GokSpySearchType</link> type,
                                                         <link linkend="AccessibleRole">AccessibleRole</link> role);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>accessible</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>role</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
