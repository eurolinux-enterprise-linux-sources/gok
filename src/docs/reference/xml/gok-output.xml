<refentry id="gok-gok-output">
<refmeta>
<refentrytitle role="top_of_page" id="gok-gok-output.top_of_page">gok-output</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gok-output</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gok-gok-output.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="void">void</link>                <link linkend="gok-output-delete-all">gok_output_delete_all</link>               (<link linkend="GokOutput">GokOutput</link> *pOutput);
<link linkend="GokOutput">GokOutput</link>*          <link linkend="gok-output-new">gok_output_new</link>                      (<link linkend="gint">gint</link> Type,
                                                         <link linkend="gchar">gchar</link> *Name,
                                                         <link linkend="AccessibleKeySynthType">AccessibleKeySynthType</link> Flag);
<link linkend="GokOutput">GokOutput</link>*          <link linkend="gok-output-new-from-xml">gok_output_new_from_xml</link>             (<link linkend="xmlNode">xmlNode</link> *pNode);
<link linkend="void">void</link>                <link linkend="gok-output-send-to-system">gok_output_send_to_system</link>           (<link linkend="GokOutput">GokOutput</link> *pOutput,
                                                         <link linkend="gboolean">gboolean</link> bNoWordCompletion);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gok-gok-output.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="gok-gok-output.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="gok-output-delete-all" role="function">
<title>gok_output_delete_all ()</title>
<indexterm zone="gok-output-delete-all"><primary sortas="gok_output_delete_all">gok_output_delete_all</primary></indexterm><programlisting><link linkend="void">void</link>                gok_output_delete_all               (<link linkend="GokOutput">GokOutput</link> *pOutput);</programlisting>
<para>
Deletes the given GokOutput and other GokOutputs that are in its list.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pOutput</parameter>&#160;:</term>
<listitem><simpara> Pointer to the GokOutput that you want deleted.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-output-new" role="function">
<title>gok_output_new ()</title>
<indexterm zone="gok-output-new"><primary sortas="gok_output_new">gok_output_new</primary></indexterm><programlisting><link linkend="GokOutput">GokOutput</link>*          gok_output_new                      (<link linkend="gint">gint</link> Type,
                                                         <link linkend="gchar">gchar</link> *Name,
                                                         <link linkend="AccessibleKeySynthType">AccessibleKeySynthType</link> Flag);</programlisting>
<para>
Creates a new GokOutput and initializes it to the given values.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Type</parameter>&#160;:</term>
<listitem><simpara> Type of output (e.g. keysym or keycode).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Name</parameter>&#160;:</term>
<listitem><simpara> Keycode, Keysym, or UTF-8 string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Flag</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A pointer to the new GokOutput, NULL if not created. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-output-new-from-xml" role="function">
<title>gok_output_new_from_xml ()</title>
<indexterm zone="gok-output-new-from-xml"><primary sortas="gok_output_new_from_xml">gok_output_new_from_xml</primary></indexterm><programlisting><link linkend="GokOutput">GokOutput</link>*          gok_output_new_from_xml             (<link linkend="xmlNode">xmlNode</link> *pNode);</programlisting>
<para>
Creates a new GokOutput and initializes it from the given XML node.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pNode</parameter>&#160;:</term>
<listitem><simpara> Pointer to the XML node.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A pointer to the new GokOutput, NULL if not created. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gok-output-send-to-system" role="function">
<title>gok_output_send_to_system ()</title>
<indexterm zone="gok-output-send-to-system"><primary sortas="gok_output_send_to_system">gok_output_send_to_system</primary></indexterm><programlisting><link linkend="void">void</link>                gok_output_send_to_system           (<link linkend="GokOutput">GokOutput</link> *pOutput,
                                                         <link linkend="gboolean">gboolean</link> bNoWordCompletion);</programlisting>
<para>
Sends the given GokOutput to the system. All other GokOutputs that are
linked to this output are also sent.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pOutput</parameter>&#160;:</term>
<listitem><simpara> Pointer to a GokOutput that will be sent to the system.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bNoWordCompletion</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
