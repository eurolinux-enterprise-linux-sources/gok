<refentry id="gok-command-vertex">
<refmeta>
<refentrytitle role="top_of_page" id="gok-command-vertex.top_of_page">command-vertex</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>command-vertex</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gok-command-vertex.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
const <link linkend="Boolean">Boolean</link>       <link linkend="command-vertex-equals">command_vertex_equals</link>               (const <link linkend="Object">Object</link> vertex_1,
                                                         const <link linkend="Object">Object</link> vertex_2);
<link linkend="void">void</link>                <link linkend="command-vertex-free">command_vertex_free</link>                 (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);
<link linkend="Command-Vertex">Command_Vertex</link>      <link linkend="command-vertex-create">command_vertex_create</link>               (const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> vertex_data);
<link linkend="void">void</link>                <link linkend="command-vertex-set-vertex-data">command_vertex_set_vertex_data</link>      (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> vertex_data);
const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link>  <link linkend="command-vertex-get-vertex-data">command_vertex_get_vertex_data</link>
                                                        (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);
<link linkend="void">void</link>                <link linkend="command-vertex-sort-by-stat">command_vertex_sort_by_stat</link>         (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);
const <link linkend="Command-Edge">Command_Edge</link>  <link linkend="command-vertex-get-edge">command_vertex_get_edge</link>             (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         const <link linkend="Command-Edge">Command_Edge</link> edge);
<link linkend="void">void</link>                <link linkend="command-vertex-remove-edge">command_vertex_remove_edge</link>          (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         const <link linkend="Command-Edge">Command_Edge</link> edge);
<link linkend="void">void</link>                <link linkend="command-vertex-add-edge">command_vertex_add_edge</link>             (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         const <link linkend="Command-Edge">Command_Edge</link> edge);
const <link linkend="Arraylist">Arraylist</link>     <link linkend="command-vertex-get-edges">command_vertex_get_edges</link>            (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);
<link linkend="void">void</link>                <link linkend="command-vertex-dump-text">command_vertex_dump_text</link>            (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         <link linkend="FILE--CAPS">FILE</link> *stream);
<link linkend="void">void</link>                <link linkend="command-vertex-dump-binary">command_vertex_dump_binary</link>          (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         <link linkend="FILE--CAPS">FILE</link> *stream);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gok-command-vertex.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="gok-command-vertex.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="command-vertex-equals" role="function">
<title>command_vertex_equals ()</title>
<indexterm zone="command-vertex-equals"><primary sortas="command_vertex_equals">command_vertex_equals</primary></indexterm><programlisting>const <link linkend="Boolean">Boolean</link>       command_vertex_equals               (const <link linkend="Object">Object</link> vertex_1,
                                                         const <link linkend="Object">Object</link> vertex_2);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex_1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vertex_2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-free" role="function">
<title>command_vertex_free ()</title>
<indexterm zone="command-vertex-free"><primary sortas="command_vertex_free">command_vertex_free</primary></indexterm><programlisting><link linkend="void">void</link>                command_vertex_free                 (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-create" role="function">
<title>command_vertex_create ()</title>
<indexterm zone="command-vertex-create"><primary sortas="command_vertex_create">command_vertex_create</primary></indexterm><programlisting><link linkend="Command-Vertex">Command_Vertex</link>      command_vertex_create               (const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> vertex_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-set-vertex-data" role="function">
<title>command_vertex_set_vertex_data ()</title>
<indexterm zone="command-vertex-set-vertex-data"><primary sortas="command_vertex_set_vertex_data">command_vertex_set_vertex_data</primary></indexterm><programlisting><link linkend="void">void</link>                command_vertex_set_vertex_data      (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> vertex_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vertex_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-get-vertex-data" role="function">
<title>command_vertex_get_vertex_data ()</title>
<indexterm zone="command-vertex-get-vertex-data"><primary sortas="command_vertex_get_vertex_data">command_vertex_get_vertex_data</primary></indexterm><programlisting>const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link>  command_vertex_get_vertex_data
                                                        (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-sort-by-stat" role="function">
<title>command_vertex_sort_by_stat ()</title>
<indexterm zone="command-vertex-sort-by-stat"><primary sortas="command_vertex_sort_by_stat">command_vertex_sort_by_stat</primary></indexterm><programlisting><link linkend="void">void</link>                command_vertex_sort_by_stat         (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-get-edge" role="function">
<title>command_vertex_get_edge ()</title>
<indexterm zone="command-vertex-get-edge"><primary sortas="command_vertex_get_edge">command_vertex_get_edge</primary></indexterm><programlisting>const <link linkend="Command-Edge">Command_Edge</link>  command_vertex_get_edge             (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-remove-edge" role="function">
<title>command_vertex_remove_edge ()</title>
<indexterm zone="command-vertex-remove-edge"><primary sortas="command_vertex_remove_edge">command_vertex_remove_edge</primary></indexterm><programlisting><link linkend="void">void</link>                command_vertex_remove_edge          (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-add-edge" role="function">
<title>command_vertex_add_edge ()</title>
<indexterm zone="command-vertex-add-edge"><primary sortas="command_vertex_add_edge">command_vertex_add_edge</primary></indexterm><programlisting><link linkend="void">void</link>                command_vertex_add_edge             (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-get-edges" role="function">
<title>command_vertex_get_edges ()</title>
<indexterm zone="command-vertex-get-edges"><primary sortas="command_vertex_get_edges">command_vertex_get_edges</primary></indexterm><programlisting>const <link linkend="Arraylist">Arraylist</link>     command_vertex_get_edges            (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-dump-text" role="function">
<title>command_vertex_dump_text ()</title>
<indexterm zone="command-vertex-dump-text"><primary sortas="command_vertex_dump_text">command_vertex_dump_text</primary></indexterm><programlisting><link linkend="void">void</link>                command_vertex_dump_text            (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         <link linkend="FILE--CAPS">FILE</link> *stream);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="command-vertex-dump-binary" role="function">
<title>command_vertex_dump_binary ()</title>
<indexterm zone="command-vertex-dump-binary"><primary sortas="command_vertex_dump_binary">command_vertex_dump_binary</primary></indexterm><programlisting><link linkend="void">void</link>                command_vertex_dump_binary          (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                                         <link linkend="FILE--CAPS">FILE</link> *stream);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
