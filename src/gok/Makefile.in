# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = gok$(EXEEXT) create-branching-keyboard$(EXEEXT)
noinst_PROGRAMS = test-gok-action$(EXEEXT) test-gok-feedback$(EXEEXT) \
	test-gok-bounds$(EXEEXT) test-gok-wordcomplete$(EXEEXT) \
	keyboard-geometry$(EXEEXT)
TESTS = test-gok-action$(EXEEXT) test-gok-feedback$(EXEEXT) \
	test-gok-bounds$(EXEEXT)
@ENABLE_LIBUSB_INPUT_TRUE@am__append_1 = $(LIBUSB_CFLAGS)
@ENABLE_LIBUSB_INPUT_TRUE@am__append_2 = $(LIBUSB_LIBS)
@ENABLE_LIBUSB_INPUT_TRUE@am__append_3 = gok-libusb.c gok-libusb.h
subdir = gok
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(serverdir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_create_branching_keyboard_OBJECTS =  \
	create-branching-keyboard.$(OBJEXT)
create_branching_keyboard_OBJECTS =  \
	$(am_create_branching_keyboard_OBJECTS)
create_branching_keyboard_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
@ENABLE_LIBUSB_INPUT_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
create_branching_keyboard_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__gok_SOURCES_DIST = callbacks.c callbacks.h gok-branchback-stack.c \
	gok-branchback-stack.h gok-button.c gok-button.h gok-chunker.c \
	gok-chunker.h gok-data.c gok-data.h gok-repeat.c gok-repeat.h \
	gok-mousecontrol.c gok-mousecontrol.h gok-keyboard.c \
	gok-keyboard.h gok-key.c gok-key.h gok-input.c gok-input.h \
	gok-scanner.c gok-scanner.h gok-settings-dialog.c \
	gok-settings-dialog.h gok-page-keysizespace.c \
	gok-page-keysizespace.h gok-page-actions.c gok-page-actions.h \
	gok-page-keyboard.c gok-page-keyboard.h \
	gok-page-accessmethod.c gok-page-accessmethod.h \
	gok-page-wordcomplete.c gok-page-wordcomplete.h \
	gok-page-feedbacks.h gok-page-feedbacks.c gok-spy.c gok-spy.h \
	gok-spy-priv.h gok.h main.c main.h switchapi.c switchapi.h \
	gtkjoyswitch.h gok-keyslotter.c gok-keyslotter.h \
	gok-word-complete.c gok-word-complete.h word-complete.c \
	word-complete.h gok-utf8-word-complete.c \
	gok-utf8-word-complete.h gok-sliding-window-word-complete.c \
	gok-sliding-window-word-complete.h gok-sound.c gok-sound.h \
	gok-speech.c gok-speech.h gok-modifier.c gok-modifier.h \
	gok-output.c gok-output.h gok-action.c gok-action.h \
	gok-control.c gok-control.h gok-log.c gok-log.h gok-log-priv.h \
	gok-gconf-keys.h gok-editor.c gok-editor.h global.h global.c \
	arraylist.h arraylist.c command-common.h command-vertex-data.h \
	command-vertex-data.c command-edge-data.h command-edge-data.c \
	command-vertex.h command-vertex.c command-edge.h \
	command-edge.c command-graph.h command-graph.c \
	command-predictor.h command-predictor.c gok-log-reader.h \
	gok-log-reader.c gok-predictor.h gok-predictor.c gok-gconf.c \
	gok-gconf.h gok-bounds.c gok-bounds.h gok-feedback.c \
	gok-feedback.h gok-composer.c gok-composer.h \
	gok-windowlister.c gok-windowlister.h gok-modifier-keymasks.c \
	gok-modifier-keymasks.h keysym2ucs.c gok-glade-helpers.c \
	gok-glade-helpers.h gok-libusb.c gok-libusb.h
@ENABLE_LIBUSB_INPUT_TRUE@am__objects_1 = gok-libusb.$(OBJEXT)
am_gok_OBJECTS = callbacks.$(OBJEXT) gok-branchback-stack.$(OBJEXT) \
	gok-button.$(OBJEXT) gok-chunker.$(OBJEXT) gok-data.$(OBJEXT) \
	gok-repeat.$(OBJEXT) gok-mousecontrol.$(OBJEXT) \
	gok-keyboard.$(OBJEXT) gok-key.$(OBJEXT) gok-input.$(OBJEXT) \
	gok-scanner.$(OBJEXT) gok-settings-dialog.$(OBJEXT) \
	gok-page-keysizespace.$(OBJEXT) gok-page-actions.$(OBJEXT) \
	gok-page-keyboard.$(OBJEXT) gok-page-accessmethod.$(OBJEXT) \
	gok-page-wordcomplete.$(OBJEXT) gok-page-feedbacks.$(OBJEXT) \
	gok-spy.$(OBJEXT) main.$(OBJEXT) switchapi.$(OBJEXT) \
	gok-keyslotter.$(OBJEXT) gok-word-complete.$(OBJEXT) \
	word-complete.$(OBJEXT) gok-utf8-word-complete.$(OBJEXT) \
	gok-sliding-window-word-complete.$(OBJEXT) gok-sound.$(OBJEXT) \
	gok-speech.$(OBJEXT) gok-modifier.$(OBJEXT) \
	gok-output.$(OBJEXT) gok-action.$(OBJEXT) \
	gok-control.$(OBJEXT) gok-log.$(OBJEXT) gok-editor.$(OBJEXT) \
	global.$(OBJEXT) arraylist.$(OBJEXT) \
	command-vertex-data.$(OBJEXT) command-edge-data.$(OBJEXT) \
	command-vertex.$(OBJEXT) command-edge.$(OBJEXT) \
	command-graph.$(OBJEXT) command-predictor.$(OBJEXT) \
	gok-log-reader.$(OBJEXT) gok-predictor.$(OBJEXT) \
	gok-gconf.$(OBJEXT) gok-bounds.$(OBJEXT) \
	gok-feedback.$(OBJEXT) gok-composer.$(OBJEXT) \
	gok-windowlister.$(OBJEXT) gok-modifier-keymasks.$(OBJEXT) \
	keysym2ucs.$(OBJEXT) gok-glade-helpers.$(OBJEXT) \
	$(am__objects_1)
gok_OBJECTS = $(am_gok_OBJECTS)
gok_LDADD = $(LDADD)
gok_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
gok_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(gok_LDFLAGS) \
	$(LDFLAGS) -o $@
am_keyboard_geometry_OBJECTS = keyboard-geometry.$(OBJEXT)
keyboard_geometry_OBJECTS = $(am_keyboard_geometry_OBJECTS)
keyboard_geometry_LDADD = $(LDADD)
keyboard_geometry_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_gok_action_OBJECTS = test-gok-action.$(OBJEXT) \
	gok-action.$(OBJEXT) gok-gconf.$(OBJEXT) gok-log.$(OBJEXT)
test_gok_action_OBJECTS = $(am_test_gok_action_OBJECTS)
test_gok_action_LDADD = $(LDADD)
test_gok_action_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_gok_bounds_OBJECTS = test-gok-bounds.$(OBJEXT) \
	gok-bounds.$(OBJEXT)
test_gok_bounds_OBJECTS = $(am_test_gok_bounds_OBJECTS)
test_gok_bounds_LDADD = $(LDADD)
test_gok_bounds_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_gok_feedback_OBJECTS = test-gok-feedback.$(OBJEXT) \
	gok-feedback.$(OBJEXT) gok-log.$(OBJEXT) gok-gconf.$(OBJEXT) \
	gok-sound.$(OBJEXT) gok-speech.$(OBJEXT)
test_gok_feedback_OBJECTS = $(am_test_gok_feedback_OBJECTS)
test_gok_feedback_LDADD = $(LDADD)
test_gok_feedback_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_gok_wordcomplete_OBJECTS = test-gok-wordcomplete.$(OBJEXT) \
	gok-word-complete.$(OBJEXT) gok-utf8-word-complete.$(OBJEXT) \
	gok-sliding-window-word-complete.$(OBJEXT) \
	word-complete.$(OBJEXT)
test_gok_wordcomplete_OBJECTS = $(am_test_gok_wordcomplete_OBJECTS)
test_gok_wordcomplete_LDADD = $(LDADD)
test_gok_wordcomplete_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(create_branching_keyboard_SOURCES) $(gok_SOURCES) \
	$(keyboard_geometry_SOURCES) $(test_gok_action_SOURCES) \
	$(test_gok_bounds_SOURCES) $(test_gok_feedback_SOURCES) \
	$(test_gok_wordcomplete_SOURCES)
DIST_SOURCES = $(create_branching_keyboard_SOURCES) \
	$(am__gok_SOURCES_DIST) $(keyboard_geometry_SOURCES) \
	$(test_gok_action_SOURCES) $(test_gok_bounds_SOURCES) \
	$(test_gok_feedback_SOURCES) $(test_gok_wordcomplete_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
DATA = $(server_DATA)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BONOBO_ACTIVATION_IDL_DIR = @BONOBO_ACTIVATION_IDL_DIR@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GOK_BINARY_AGE = @GOK_BINARY_AGE@
GOK_CFLAGS = @GOK_CFLAGS@
GOK_INTERFACE_AGE = @GOK_INTERFACE_AGE@
GOK_LIBS = @GOK_LIBS@
GOK_MAJOR_VERSION = @GOK_MAJOR_VERSION@
GOK_MICRO_VERSION = @GOK_MICRO_VERSION@
GOK_MINOR_VERSION = @GOK_MINOR_VERSION@
GREP = @GREP@
GTKDOC_CHECK = @GTKDOC_CHECK@
HTML_DIR = @HTML_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
LANGDIRS = @LANGDIRS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBBONOBO_IDL_DIR = @LIBBONOBO_IDL_DIR@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBUSB_CFLAGS = @LIBUSB_CFLAGS@
LIBUSB_LIBS = @LIBUSB_LIBS@
LIBWNCK_CFLAGS = @LIBWNCK_CFLAGS@
LIBWNCK_LIBS = @LIBWNCK_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_RELEASE = @LT_RELEASE@
LT_REVISION = @LT_REVISION@
LT_VERSION_INFO = @LT_VERSION_INFO@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_IDL = @ORBIT_IDL@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
SCROLLKEEPER_CONFIG = @SCROLLKEEPER_CONFIG@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
XEVIE_LIBS = @XEVIE_LIBS@
XGETTEXT = @XGETTEXT@
XINPUT_LIBS = @XINPUT_LIBS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
serverdir = $(libdir)/bonobo/servers
server_in_files = GNOME_Gok.server.in.in
server_DATA = $(server_in_files:.server.in.in=.server)
EXTRA_DIST = \
	test-gok-log.pl    \
	$(server_in_files)

CLEANFILES = $(server_DATA) $(server_DATA).in
INCLUDES = -DGOK_LOCALEDIR=\""$(datadir)/locale"\" \
	-DPREFIX=\""$(prefix)"\" -DSYSCONFDIR=\""$(sysconfdir)"\" \
	-DDATADIR=\""$(datadir)"\" -DLIBDIR=\""$(libdir)"\" \
	-I$(top_srcdir) -I$(top_builddir) $(GOK_CFLAGS) \
	$(am__append_1)
LDADD = $(GOK_LIBS) $(X_LIBS) @LT_VERSION_INFO@ $(am__append_2)
gok_LDFLAGS = -export-dynamic
gok_SOURCES = callbacks.c callbacks.h gok-branchback-stack.c \
	gok-branchback-stack.h gok-button.c gok-button.h gok-chunker.c \
	gok-chunker.h gok-data.c gok-data.h gok-repeat.c gok-repeat.h \
	gok-mousecontrol.c gok-mousecontrol.h gok-keyboard.c \
	gok-keyboard.h gok-key.c gok-key.h gok-input.c gok-input.h \
	gok-scanner.c gok-scanner.h gok-settings-dialog.c \
	gok-settings-dialog.h gok-page-keysizespace.c \
	gok-page-keysizespace.h gok-page-actions.c gok-page-actions.h \
	gok-page-keyboard.c gok-page-keyboard.h \
	gok-page-accessmethod.c gok-page-accessmethod.h \
	gok-page-wordcomplete.c gok-page-wordcomplete.h \
	gok-page-feedbacks.h gok-page-feedbacks.c gok-spy.c gok-spy.h \
	gok-spy-priv.h gok.h main.c main.h switchapi.c switchapi.h \
	gtkjoyswitch.h gok-keyslotter.c gok-keyslotter.h \
	gok-word-complete.c gok-word-complete.h word-complete.c \
	word-complete.h gok-utf8-word-complete.c \
	gok-utf8-word-complete.h gok-sliding-window-word-complete.c \
	gok-sliding-window-word-complete.h gok-sound.c gok-sound.h \
	gok-speech.c gok-speech.h gok-modifier.c gok-modifier.h \
	gok-output.c gok-output.h gok-action.c gok-action.h \
	gok-control.c gok-control.h gok-log.c gok-log.h gok-log-priv.h \
	gok-gconf-keys.h gok-editor.c gok-editor.h global.h global.c \
	arraylist.h arraylist.c command-common.h command-vertex-data.h \
	command-vertex-data.c command-edge-data.h command-edge-data.c \
	command-vertex.h command-vertex.c command-edge.h \
	command-edge.c command-graph.h command-graph.c \
	command-predictor.h command-predictor.c gok-log-reader.h \
	gok-log-reader.c gok-predictor.h gok-predictor.c gok-gconf.c \
	gok-gconf.h gok-bounds.c gok-bounds.h gok-feedback.c \
	gok-feedback.h gok-composer.c gok-composer.h \
	gok-windowlister.c gok-windowlister.h gok-modifier-keymasks.c \
	gok-modifier-keymasks.h keysym2ucs.c gok-glade-helpers.c \
	gok-glade-helpers.h $(am__append_3)
test_gok_action_SOURCES = \
	test-gok-action.c                                \
	gok-action.c gok-action.h                        \
	gok-gconf.c gok-gconf.h                          \
	gok-log.c gok-log.h gok-log-priv.h

test_gok_feedback_SOURCES = \
	test-gok-feedback.c                              \
	gok-feedback.c gok-feedback.h                    \
	gok-log.c gok-log.h gok-log-priv.h               \
	gok-gconf.c gok-gconf.h gok-gconf-keys.h         \
	gok-sound.c gok-sound.h				\
	gok-speech.c gok-speech.h

test_gok_bounds_SOURCES = \
	test-gok-bounds.c                                \
	gok-bounds.c gok-bounds.h

test_gok_wordcomplete_SOURCES = \
	test-gok-wordcomplete.c \
	gok-word-complete.c \
	gok-word-complete.h \
	gok-utf8-word-complete.c \
	gok-utf8-word-complete.h \
	gok-sliding-window-word-complete.c \
	gok-sliding-window-word-complete.h \
	word-complete.c \
	word-complete.h 

keyboard_geometry_SOURCES = keyboard-geometry.c
create_branching_keyboard_SOURCES = create-branching-keyboard.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu gok/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu gok/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
create-branching-keyboard$(EXEEXT): $(create_branching_keyboard_OBJECTS) $(create_branching_keyboard_DEPENDENCIES) 
	@rm -f create-branching-keyboard$(EXEEXT)
	$(LINK) $(create_branching_keyboard_OBJECTS) $(create_branching_keyboard_LDADD) $(LIBS)
gok$(EXEEXT): $(gok_OBJECTS) $(gok_DEPENDENCIES) 
	@rm -f gok$(EXEEXT)
	$(gok_LINK) $(gok_OBJECTS) $(gok_LDADD) $(LIBS)
keyboard-geometry$(EXEEXT): $(keyboard_geometry_OBJECTS) $(keyboard_geometry_DEPENDENCIES) 
	@rm -f keyboard-geometry$(EXEEXT)
	$(LINK) $(keyboard_geometry_OBJECTS) $(keyboard_geometry_LDADD) $(LIBS)
test-gok-action$(EXEEXT): $(test_gok_action_OBJECTS) $(test_gok_action_DEPENDENCIES) 
	@rm -f test-gok-action$(EXEEXT)
	$(LINK) $(test_gok_action_OBJECTS) $(test_gok_action_LDADD) $(LIBS)
test-gok-bounds$(EXEEXT): $(test_gok_bounds_OBJECTS) $(test_gok_bounds_DEPENDENCIES) 
	@rm -f test-gok-bounds$(EXEEXT)
	$(LINK) $(test_gok_bounds_OBJECTS) $(test_gok_bounds_LDADD) $(LIBS)
test-gok-feedback$(EXEEXT): $(test_gok_feedback_OBJECTS) $(test_gok_feedback_DEPENDENCIES) 
	@rm -f test-gok-feedback$(EXEEXT)
	$(LINK) $(test_gok_feedback_OBJECTS) $(test_gok_feedback_LDADD) $(LIBS)
test-gok-wordcomplete$(EXEEXT): $(test_gok_wordcomplete_OBJECTS) $(test_gok_wordcomplete_DEPENDENCIES) 
	@rm -f test-gok-wordcomplete$(EXEEXT)
	$(LINK) $(test_gok_wordcomplete_OBJECTS) $(test_gok_wordcomplete_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arraylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callbacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-edge-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-edge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-graph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-predictor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-vertex-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-vertex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create-branching-keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-action.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-bounds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-branchback-stack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-button.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-chunker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-composer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-control.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-editor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-feedback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-gconf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-glade-helpers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-keyslotter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-libusb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-log-reader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-modifier-keymasks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-modifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-mousecontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-output.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-accessmethod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-actions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-feedbacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-keysizespace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-wordcomplete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-predictor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-repeat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-settings-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-sliding-window-word-complete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-speech.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-spy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-utf8-word-complete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-windowlister.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-word-complete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keyboard-geometry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keysym2ucs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/switchapi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-action.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-bounds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-feedback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-wordcomplete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/word-complete.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-serverDATA: $(server_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(serverdir)" || $(MKDIR_P) "$(DESTDIR)$(serverdir)"
	@list='$(server_DATA)'; test -n "$(serverdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(serverdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(serverdir)" || exit $$?; \
	done

uninstall-serverDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(server_DATA)'; test -n "$(serverdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(serverdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(serverdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(serverdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-serverDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-serverDATA

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-serverDATA install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-serverDATA

$(server_in_files:.server.in.in=.server.in): $(server_in_files)
	sed -e "s|\@BINDIR\@|$(bindir)|" $< > $@
@INTLTOOL_SERVER_RULE@

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
